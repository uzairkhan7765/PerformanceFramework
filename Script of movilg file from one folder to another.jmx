<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Moving File From one Location to Another" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Moving File From one Location to Another" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521520974000</longProp>
        <longProp name="ThreadGroup.end_time">1521520974000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler-moving directory from one location to another" enabled="false">
              <stringProp name="BeanShellSampler.query">import org.apache.commons.io.FileUtils;
 
import java.io.File;
import java.io.IOException;
import java.lang.*;
import java.text.DateFormat;
import java.util.Date;
import java.text.SimpleDateFormat;
 
        File src = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Sourcefolder&quot;);
        File dest = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Destinationfolder&quot;);

    
        try {

         FileUtils.moveDirectoryToDirectory(src, dest, true);
         
        } catch (IOException e) {
            e.printStackTrace();
        }


</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler- copy all type of files from one folder to another" enabled="false">
              <stringProp name="BeanShellSampler.query">import java.io.File;                           //Library that we use is Code
import java.io.IOException;				 //Library that we use is Code
import java.io.FilenameFilter;			//Library that we use is Code
import org.apache.commons.io.FileUtils;	    //Library that we use is Code

File copyfolder,sourcefolder;			  //Declaration of Variables

  String[] pathnames;				//Declaration of String
   String[] pathnames1;		

   /*********************** moving first folder *************************/
        File f = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder&quot;);  //Source Folder
        pathnames = f.list();       	//Getting All the files in the list
        for (String pathname : pathnames) {            //Foreach loop to iterate
		copyfolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder/&quot;+pathname+&quot;&quot;);               
		// Getting path of each file one by one from source folder
		sourcefolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Sourcefolder/&quot;+pathname+&quot;&quot;);
		// Getting Path of Destination Folder
		FileUtils.copyFile(copyfolder, sourcefolder);  // Copying file from source Folder to Destination Folder
           log.info(pathname);					 //logging into Log files
        }

   /************************* moving second folder ***********************/

    File f = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder1&quot;);  //Source Folder
        pathnames = f.list();       	//Getting All the files in the list
        for (String pathname : pathnames) {            //Foreach loop to iterate
		copyfolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder1/&quot;+pathname+&quot;&quot;);               
		// Getting path of each file one by one from source folder
		sourcefolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Sourcefolder1/&quot;+pathname+&quot;&quot;);
		// Getting Path of Destination Folder
		FileUtils.copyFile(copyfolder, sourcefolder);  // Copying file from source Folder to Destination Folder
           log.info(pathname);					 //logging into Log files
        }

         /************************* moving Third folder ***********************/

    File f = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder2&quot;);  //Source Folder
        pathnames = f.list();       	//Getting All the files in the list
        for (String pathname : pathnames) {            //Foreach loop to iterate
		copyfolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder2/&quot;+pathname+&quot;&quot;);               
		// Getting path of each file one by one from source folder
		sourcefolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Sourcefolder2/&quot;+pathname+&quot;&quot;);
		// Getting Path of Destination Folder
		FileUtils.copyFile(copyfolder, sourcefolder);  // Copying file from source Folder to Destination Folder
           log.info(pathname);					 //logging into Log files
        }

        /************************* moving Fourth folder ***********************/

    File f = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder3&quot;);  //Source Folder
        pathnames = f.list();       	//Getting All the files in the list
        for (String pathname : pathnames) {            //Foreach loop to iterate
		copyfolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder3/&quot;+pathname+&quot;&quot;);               
		// Getting path of each file one by one from source folder
		sourcefolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Sourcefolder3/&quot;+pathname+&quot;&quot;);
		// Getting Path of Destination Folder
		FileUtils.copyFile(copyfolder, sourcefolder);  // Copying file from source Folder to Destination Folder
           log.info(pathname);					 //logging into Log files
        }


            /************************* moving Fifth folder ***********************/

    File f = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder4&quot;);  //Source Folder
        pathnames = f.list();       	//Getting All the files in the list
        for (String pathname : pathnames) {            //Foreach loop to iterate
		copyfolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder4/&quot;+pathname+&quot;&quot;);               
		// Getting path of each file one by one from source folder
		sourcefolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Sourcefolder4/&quot;+pathname+&quot;&quot;);
		// Getting Path of Destination Folder
		FileUtils.copyFile(copyfolder, sourcefolder);  // Copying file from source Folder to Destination Folder
           log.info(pathname);					 //logging into Log files
        }



        </stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler- copy all type of files from one folder to another-check exception" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.io.File;                           //Library that we use is Code
import java.io.IOException;				 //Library that we use is Code
import java.io.FilenameFilter;			//Library that we use is Code
import org.apache.commons.io.FileUtils;	    //Library that we use is Code

File copyfolder,sourcefolder;			  //Declaration of Variables

  String[] pathnames;				//Declaration of String
   String[] pathnames1;		

   /*********************** moving first folder *************************/
        File f = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder&quot;);  //Source Folder
        pathnames = f.list();           //Getting All the files in the list

        if (pathnames.length==0){
         log.info(&quot;There is no file in this folder&quot;);
        }
        else{
        
         for (String pathname : pathnames) {            //Foreach loop to iterate
		copyfolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder/&quot;+pathname+&quot;&quot;);               
		// Getting path of each file one by one from source folder
		sourcefolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Sourcefolder/&quot;+pathname+&quot;&quot;);
		// Getting Path of Destination Folder
		FileUtils.copyFile(copyfolder, sourcefolder);  // Copying file from source Folder to Destination Folder
           log.info(pathname);					 //logging into Log files
        }
        }
        
/************************* moving second folder ***********************/

    File f = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder1&quot;);  //Source Folder
        pathnames = f.list();       	//Getting All the files in the list
          if (pathnames.length==0){
         log.info(&quot;There is no file in this folder&quot;);
        }
        else{
        for (String pathname : pathnames) {            //Foreach loop to iterate
		copyfolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder1/&quot;+pathname+&quot;&quot;);               
		// Getting path of each file one by one from source folder
		sourcefolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Sourcefolder1/&quot;+pathname+&quot;&quot;);
		// Getting Path of Destination Folder
		FileUtils.copyFile(copyfolder, sourcefolder);  // Copying file from source Folder to Destination Folder
           log.info(pathname);					 //logging into Log files
        }
        }</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler-moving fie from one location to another" enabled="false">
              <stringProp name="BeanShellSampler.query">import org.apache.commons.io.FileUtils;

File copyfolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/CopyFolder/file.json&quot;);
File sourcefolder = new File(&quot;C:/Users/uzair.latif/Desktop/apache-jmeter-5.2.1/bin/Sourcefolder/file.json&quot;);
FileUtils.copyFile(copyfolder, sourcefolder);

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import org.apache.commons.io.FileUtils;
import org.apache.commons.io.CopyUtils;</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="OS Process Sampler" enabled="false">
              <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
              <stringProp name="SystemSampler.command">cmd.exe</stringProp>
              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SystemSampler.directory"></stringProp>
              <stringProp name="SystemSampler.stdin">C:\Users\uzair.latif\Desktop\apache-jmeter-5.2.1\bin\Sourcefolder\file.json</stringProp>
              <stringProp name="SystemSampler.stdout">C:\Users\uzair.latif\Desktop\apache-jmeter-5.2.1\bin\Destinationfolder</stringProp>
              <longProp name="SystemSampler.timeout">5000</longProp>
            </SystemSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/u/apache-jmeter-3.3/results.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">/u/apache-jmeter-5.3/results.jtl</stringProp>
        <boolProp name="useGroupName">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">/u/apache-jmeter-3.3/results.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="useGroupName">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
